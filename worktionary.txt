Started: 20 February 2016

The OpenShift `ruby` cartridge documentation can be found at:
http://openshift.github.io/documentation/oo_cartridge_guide.html#ruby


login to multiple account on openshift:
http://stackoverflow.com/a/33318301/474330

mongodb reference:
https://docs.mongodb.org/getting-started/shell/

mongodb GUI tool:
https://github.com/jeromelebel/MongoHub-Mac

+ Ruby 2.0 cartridge, no auto-scaling
+ MongoDB 2.4 cartridge
+ RockMongo 1.1 cartridge

MongoDB 2.4 database added.  Please make note of these credentials:

   Root User:     admin
   Root Password: 6dWPx698Z-9k
   Database Name: ruby

Connection URL: mongodb://$OPENSHIFT_MONGODB_DB_HOST:$OPENSHIFT_MONGODB_DB_PORT/

Please make note of these MongoDB credentials:
  RockMongo User: admin
  RockMongo Password: 6dWPx698Z-9k
URL: https://ruby-vvydmk.rhcloud.com/rockmongo/

setting up the development on local:
1. install mongodb - choose download manually from MongoDB download site and choose version 2.4 final
https://docs.mongodb.org/getting-started/shell/tutorial/install-mongodb-on-os-x/
2. run mongodb using this command:
mongod --dbpath /Applications/Mongo/data/db
3a. import data into the collection
mongoimport --db vvydmk --collection ScoreDaily --drop --file ./tmp/parsedb/ScoreDaily.json --jsonArray
mongoimport --db vvydmk --collection _Installation --drop --file ./tmp/parsedb/_Installation.json --jsonArray
mongoimport --db vvydmk --collection _User --drop --file ./tmp/parsedb/_User.json --jsonArray
mongoimport --db vvydmk --collection TestObject --drop --file ./tmp/parsedb/TestObject.json --jsonArray

3b. import data into openshift: note that the db need to be $OPENSHIFT_APP_NAME
mongoimport --db $OPENSHIFT_APP_NAME --collection ScoreDaily --host $OPENSHIFT_MONGODB_DB_HOST --port $OPENSHIFT_MONGODB_DB_PORT --username $OPENSHIFT_MONGODB_DB_USERNAME --password $OPENSHIFT_MONGODB_DB_PASSWORD --drop --file $OPENSHIFT_REPO_DIR/tmp/parsedb/ScoreDaily.json --jsonArray
mongoimport --db $OPENSHIFT_APP_NAME --collection _Installation --host $OPENSHIFT_MONGODB_DB_HOST --port $OPENSHIFT_MONGODB_DB_PORT --username $OPENSHIFT_MONGODB_DB_USERNAME --password $OPENSHIFT_MONGODB_DB_PASSWORD --drop --file $OPENSHIFT_REPO_DIR/tmp/parsedb/_Installation.json --jsonArray
mongoimport --db $OPENSHIFT_APP_NAME --collection _User --host $OPENSHIFT_MONGODB_DB_HOST --port $OPENSHIFT_MONGODB_DB_PORT --username $OPENSHIFT_MONGODB_DB_USERNAME --password $OPENSHIFT_MONGODB_DB_PASSWORD --drop --file $OPENSHIFT_REPO_DIR/tmp/parsedb/_User.json --jsonArray
mongoimport --db $OPENSHIFT_APP_NAME --collection TestObject --host $OPENSHIFT_MONGODB_DB_HOST --port $OPENSHIFT_MONGODB_DB_PORT --username $OPENSHIFT_MONGODB_DB_USERNAME --password $OPENSHIFT_MONGODB_DB_PASSWORD --drop --file $OPENSHIFT_REPO_DIR/tmp/parsedb/TestObject.json --jsonArray

3c. setup mongodb with mongoid
rails g mongoid:config

3d. generate mongoid model
rails generate model #printout helps
rails generate model ScoreDaily

4. setup rails
http://guides.rubyonrails.org/getting_started.html
cd ${GIT_ROOT}/../
rails new railsapp
# ./railsapp/bin/bundle install --path ./railsapp/vendor/bundle
# ./railsapp/bin/bundle install --path vendor/bundle
cd railsapp
./bin/bundle install --path vendor/bundle
5. run the rail server locally
./bin/rails server

bundle install nokogiri failed inside openshift,
ssh to the gear, and run
gem install nokogiri -- --use-system-libraries
works., but the bundle install afterwards will still try to reinstall nokogiri and failed again, we'd need to make the bundle install nokogiri working, by doing this locally:
bundle config --local build.nokogiri --use-system-libraries
then commit and push the .bundle/config file
if we need to run bundle install locally (e.g. to generate the Gemfile.lock file), we need to delete off the .bundle/config because that will cause the build to fail locally

to delete off the global bundle config:
bundle

-a ruby: here is the <application name>
rhc env set RAILS_ENV=development -a ruby
rhc env-unset RAILS_ENV -a ruby

create a route:
./bin/rails generate controller welcome index

NOTE for commit-id 28239dd:
It is actually working, just that the collection mongoid is searching is score_dailies

<%= "#{ENV['$OPENSHIFT_MONGODB_DB_HOST']}:#{ENV['OPENSHIFT_MONGODB_DB_PORT']}" %>
puts "#{ENV['$OPENSHIFT_MONGODB_DB_HOST']}:#{ENV['OPENSHIFT_MONGODB_DB_PORT']}"
<%= "#{ENV['$OPENSHIFT_MONGODB_DB_HOST']}:#{ENV['$OPENSHIFT_MONGODB_DB_PORT']}" %>
http://help.cloud66.com/database-management/mongodb-replica-sets